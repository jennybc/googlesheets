% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gs_shiny.R
\name{gs_get_auth_url}
\alias{gs_get_auth_url}
\title{Build the Google URL to authenticate \code{googlesheets} in Web Server Applications}
\usage{
gs_get_auth_url(client_id = getOption("googlesheets.webapp.client_id"),
  redirect_uri = getOption("googlesheets.webapp.redirect_uri"),
  access_type = "online", approval_prompt = "auto")
}
\arguments{
\item{client_id}{client id obtained from Google Developers Console}

\item{redirect_uri}{where the response is sent, should be one of the
redirect_uri values listed for the project in Google's Developer Console,
must match exactly as listed including any trailing '/'}

\item{access_type}{either "online" (no refresh token) or "offline"
(refresh token), determines whether a refresh token is returned in the response}

\item{approval_prompt}{either "force" or "auto", determines whether the user
  is reprompted for consent, If set to "auto", then the user only has to see
  the consent page once for the first time through the authorization sequence.
  If set to "force" then user will have to grant consent everytime even if
  they have previously done so.}
}
\description{
This is the first step in the authorization sequence. Form the Google URL
that redirects the user to Google's authorization screen. Once a user
authenticates, the response in the form of an authorization code is sent
to the \code{redirect_uri} in which \code{gs_shiny_get_token} uses to
exchange for an access token.
}
\details{
Set client ID and Secret, and redirect uri specific to your project by:
options("googlesheets.webapp.client_id" = MY_CLIENT_ID)
options("googlesheets.webapp.client_secret" = MY_CLIENT_SECRET)
options("googlesheets.webapp.redirect_uri" = MY_REDIRECT_URI)

Based on Google Developers' guide to \href{https://developers.google.com/ide
ntity/protocols/OAuth2WebServer}{Using OAuth2.0 for Web Server Applications}.
}
\seealso{
gs_shiny_get_token
}

