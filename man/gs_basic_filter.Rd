% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_filter.R
\name{gs_basic_filter}
\alias{gs_basic_filter}
\alias{gs_clear_basic_filter}
\alias{gs_set_basic_filter}
\title{Set or Clear Basic Filters}
\usage{
gs_set_basic_filter(ss, ws = 1, range = NULL, sort_spec = NULL,
  criteria = NULL, verbose = FALSE)

gs_clear_basic_filter(ss, ws = 1, verbose = FALSE)
}
\arguments{
\item{ss}{a registered Google spreadsheet, i.e. a \code{\link{googlesheet}}
object}

\item{ws}{positive integer or character string specifying index or title,
respectively, of the worksheet}

\item{range}{a cell range, as described in \code{\link{cell-specification}}}

\item{sort_spec}{list-of-lists or 2 column data.frame; the list must contain
sublists that have 2 elements each. The first element should be an integer
representing the targetcolumn index in the range to sort. The second element
should be a string specifying either "ASCENDING" or "DESCENDING". If passing
a data.frame the first column should be the the target column indices and the
second column the sort direction.}

\item{criteria}{list-of-lists or 3 column data.frame; the list must contain
sublists that have 3 elements each. The first element should be an integer
representing the target column index in the range to filter. The second element
should be a string specifying the filter condition type (e.g. "NUMBER_GREATER",
"NUMBER_EQ", etc.). All condition types are specified below in the details section.
The third element should be the condition value. The value upon which to evaluate
the column against using the condition type. If passing a data.frame the first
column should be the the target column indices, the second column the condition
type, and the third column the condition value.}

\item{verbose}{logical; do you want informative messages?}
}
\description{
Set of clear basic filters. Basic filters are filters that are shared between
all users of the spreadsheet. Anytime a user modifies this filter, all changes
will be visible to all users. This behavior is different from filter views,
which are only visible to the user working with the filter view. There is
another set of functions to work with filter views.
}
\details{
When specifying a criteria, you must provide the condition type. The
condition type is the guideline for how to compare values in the column against
the condition value. The condition type must be one of the following values:
\itemize{
 \item{CONDITION_TYPE_UNSPECIFIED - The default value, do not use.}
 \item{NUMBER_GREATER - The cell's value must be greater than the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_GREATER_THAN_EQ - The cell's value must be greater than or equal to the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_LESS - The cell's value must be less than the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_LESS_THAN_EQ - The cell's value must be less than or equal to the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_EQ - The cell's value must be equal to the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_NOT_EQ - The cell's value must be not equal to the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{NUMBER_BETWEEN - The cell's value must be between the two condition values.
Supported by data validation, conditional formatting and filters.
Requires exactly two ConditionValues.}
 \item{NUMBER_NOT_BETWEEN - The cell's value must not be between the two condition values.
Supported by data validation, conditional formatting and filters.
Requires exactly two ConditionValues.}
 \item{TEXT_CONTAINS - The cell's value must contain the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{TEXT_NOT_CONTAINS - The cell's value must not contain the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{TEXT_STARTS_WITH - The cell's value must start with the condition's value.
Supported by conditional formatting and filters.
Requires a single ConditionValue.}
 \item{TEXT_ENDS_WITH - The cell's value must end with the condition's value.
Supported by conditional formatting and filters.
Requires a single ConditionValue.}
 \item{TEXT_EQ - The cell's value must be exactly the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{TEXT_IS_EMAIL - The cell's value must be a valid email address.
Supported by data validation.
Requires no ConditionValues.}
 \item{TEXT_IS_URL - The cell's value must be a valid URL.
Supported by data validation.
Requires no ConditionValues.}
 \item{DATE_EQ - The cell's value must be the same date as the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
 \item{DATE_BEFORE - The cell's value must be before the date of the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue
that may be a relative date.}
 \item{DATE_AFTER - The cell's value must be after the date of the condition's value.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue
that may be a relative date.}
 \item{DATE_ON_OR_BEFORE - The cell's value must be on or before the date of the condition's value.
Supported by data validation.
Requires a single ConditionValue
that may be a relative date.}
 \item{DATE_ON_OR_AFTER - The cell's value must be on or after the date of the condition's value.
Supported by data validation.
Requires a single ConditionValue
that may be a relative date.}
 \item{DATE_BETWEEN - The cell's value must be between the dates of the two condition values.
Supported by data validation.
Requires exactly two ConditionValues.}
 \item{DATE_NOT_BETWEEN - The cell's value must be outside the dates of the two condition values.
Supported by data validation.
Requires exactly two ConditionValues.}
 \item{DATE_IS_VALID - The cell's value must be a date.
Supported by data validation.
Requires no ConditionValues.}
 \item{ONE_OF_RANGE - The cell's value must be listed in the grid in condition value's range.
Supported by data validation.
Requires a single ConditionValue,
and the value must be a valid range in A1 notation.}
 \item{ONE_OF_LIST - The cell's value must in the list of condition values.
Supported by data validation.
Supports any number of condition values,
one per item in the list.
Formulas are not supported in the values.}
 \item{BLANK - The cell's value must be empty.
Supported by conditional formatting and filters.
Requires no ConditionValues.}
 \item{NOT_BLANK - The cell's value must not be empty.
Supported by conditional formatting and filters.
Requires no ConditionValues.}
 \item{CUSTOM_FORMULA - The condition's formula must evaluate to TRUE.
Supported by data validation, conditional formatting and filters.
Requires a single ConditionValue.}
}
}
\examples{
\dontrun{

gs_set_basic_filter(gap_ss, ws = 1)
gs_set_basic_filter(gap_ss, ws = 1, 
                    range = cell_cols(5:6), 
                    criteria=list(list(3, "NUMBER_LESS", 1970)))
gs_set_basic_filter(gap_ss, ws = "Americas", 
                    sort_spec = list(list(3, "DESCENDING")), 
                    criteria = list(list(4, "NUMBER_LESS", 50), 
                                    list(6, "NUMBER_GREATER_THAN_EQ", 1000)))
gs_set_basic_filter(gap_ss, ws = "Americas", 
                    range = cell_cols(3:6), 
                    sort_spec=list(list(2, "DESCENDING")))

gs_clear_basic_filter(gap_ss, ws = 1)
gs_clear_basic_filter(gap_ss, ws = "Americas")

}
}

