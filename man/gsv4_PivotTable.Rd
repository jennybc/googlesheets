% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsv4_object.R
\name{gsv4_PivotTable}
\alias{gsv4_PivotTable}
\title{gsv4_PivotTable}
\usage{
gsv4_PivotTable(rows = NULL, columns = NULL, criteria = NULL,
  source = NULL, valueLayout = NULL, values = NULL)
}
\arguments{
\item{rows}{list of \code{\link{gsv4_PivotGroup}} objects. Each row grouping in the pivot table.}

\item{columns}{list of \code{\link{gsv4_PivotGroup}} objects. Each column grouping in the pivot table.}

\item{criteria}{list or data.frame of \code{\link{gsv4_PivotFilterCriteria}} objects. An optional mapping of filters per source column offset.

The filters will be applied before aggregating data into the pivot table.
The map's key is the column offset of the source range that you want to
filter, and the value is the criteria for that column.

For example, if the source was `C10:E15`, a key of `0` will have the filter
for column `C`, whereas the key `1` is for column `D`.}

\item{source}{\code{\link{gsv4_GridRange}} object. A range on a sheet.
All indexes are zero-based.
Indexes are half open, e.g the start index is inclusive
and the end index is exclusive -- [start_index, end_index).
Missing indexes indicate the range is unbounded on that side.

For example, if `"Sheet1"` is sheet ID 0, then:

  `Sheet1!A1:A1 == sheet_id: 0,
                  start_row_index: 0, end_row_index: 1,
                  start_column_index: 0, end_column_index: 1`

  `Sheet1!A3:B4 == sheet_id: 0,
                  start_row_index: 2, end_row_index: 4,
                  start_column_index: 0, end_column_index: 2`

  `Sheet1!A:B == sheet_id: 0,
                start_column_index: 0, end_column_index: 2`

  `Sheet1!A5:B == sheet_id: 0,
                 start_row_index: 4,
                 start_column_index: 0, end_column_index: 2`

  `Sheet1 == sheet_id:0`

The start index must always be less than or equal to the end index.
If the start index equals the end index, then the range is empty.
Empty ranges are typically not meaningful and are usually rendered in the
UI as `#REF!`.}

\item{valueLayout}{string. Whether values should be listed horizontally (as columns)
or vertically (as rows). valueLayout must take one of the following values: HORIZONTAL, VERTICAL
See the details section for the definition of each of these values.}

\item{values}{list of \code{\link{gsv4_PivotValue}} objects. A list of values to include in the pivot table.}
}
\value{
PivotTable
}
\description{
A pivot table.
}
\details{
valueLayout takes one of the following values:
\itemize{
 \item{HORIZONTAL - Values are laid out horizontally (as columns).}
 \item{VERTICAL - Values are laid out vertically (as rows).}
}
}
\seealso{
\href{https://developers.google.com/sheets/reference/rest/v4/spreadsheets#PivotTable}{Google's Documentation for PivotTable}
}

