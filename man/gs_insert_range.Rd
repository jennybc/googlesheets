% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_dimensions.R
\name{gs_insert_range}
\alias{gs_insert_cells}
\alias{gs_insert_columns}
\alias{gs_insert_range}
\alias{gs_insert_rows}
\title{Insert Rows, Columns, or Cells}
\usage{
gs_insert_rows(ss, ws = 1, anchor = "A1", dim = c(1L), input = NULL,
  col_names = NULL, byrow = FALSE, side = c("below", "above"),
  verbose = FALSE)

gs_insert_columns(ss, ws = 1, anchor = "A1", dim = c(1L), input = NULL,
  col_names = NULL, byrow = FALSE, side = c("right", "left"),
  verbose = FALSE)

gs_insert_cells(ss, ws = 1, anchor = "A1", dim = c(1L, 1L),
  input = NULL, col_names = NULL, byrow = FALSE,
  shift_direction = c("right", "down"), verbose = FALSE)
}
\arguments{
\item{ss}{a registered Google spreadsheet, i.e. a \code{\link{googlesheet}}
object}

\item{ws}{positive integer or character string specifying index or title,
respectively, of the worksheet}

\item{anchor}{single character string specifying the upper left cell of the
cell range to edit; positioning notation can be either "A1" or "R1C1"}

\item{dim}{integer vector, of length one or two, holding the number of rows
and/or columns of the targetted rectangle; ignored if \code{input} is provided}

\item{input}{a one- or two-dimensional input object, used to determine the
extent of the targetted rectangle}

\item{col_names}{logical, indicating whether a row should be reserved for
the column or variable names of a two-dimensional input; if omitted, will be
determined by checking whether \code{input} has column names}

\item{byrow}{logical, indicating whether a one-dimensional input should run
down or to the right}

\item{side}{character, of either "below" or "above" specifying on which side of the
anchor that the inserted rows should go}

\item{verbose}{logical; do you want informative messages?}

\item{shift_direction}{character, of either "right" or "down" specifying
which direction to shift the existing cells when the new ones are inserted}
}
\description{
Insert rows above or below an anchor reference. Insert columns to the right or
left of an anchor reference. Insert cells by shifting existing cells right or 
down. Each function includes an input argument to write data into the spot 
where the insert was made.
}
\examples{
\dontrun{

gs_insert_rows(gap_ss, ws = "Africa", anchor = "C3", dim = 2)
gs_insert_rows(gap_ss, ws = "Africa", anchor = "C3", dim = 2, side = 'above')
gs_insert_rows(gap_ss, ws = "Africa", anchor = "C3", input = head(iris))
gs_insert_rows(gap_ss, ws = "Africa", anchor = "C3", input = c(1,2,3,4,5,6))
gs_insert_rows(gap_ss, ws = "Africa", anchor = "C3", input = c(1,2,3,4,5,6), byrow=TRUE)

gs_insert_columns(gap_ss, ws = "Africa", anchor = "C3", dim = 2)
gs_insert_columns(gap_ss, ws = "Africa", anchor = "C3", dim = 2, side = 'left')
gs_insert_columns(gap_ss, ws = "Africa", anchor = "C3", input = head(iris))
gs_insert_columns(gap_ss, ws = "Africa", anchor = "C3", input = c(1,2,3))
gs_insert_columns(gap_ss, ws = "Africa", anchor = "C3", input = c(1,2,3), byrow=TRUE)

gs_insert_cells(gap_ss, ws = "Africa", anchor = "C3", dim = c(2,2))
gs_insert_cells(gap_ss, ws = "Africa", anchor = "C3", dim = c(2,2), shift_direction = 'down')
gs_insert_cells(gap_ss, ws = "Africa", anchor = "C3", input = iris[1:2,1:2])
gs_insert_cells(gap_ss, ws = "Africa", anchor = "C3", input = c(1,2,3))
gs_insert_cells(gap_ss, ws = "Africa", anchor = "C3", 
                input = c(1,2,3), byrow=TRUE, shift_direction = 'down')

}
}

